"""
Django settings for wheatleycensus project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/
"""

# wheatleycensus/settings.py
# Main Django settings file: configures database, installed apps, middleware, static files, etc.
# Secrets and credentials are loaded from environment variables for security.

import os
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables from .env file if present
load_dotenv()

# --- Base Directory ---
# BASE_DIR is the root directory of your Django project. Used for building paths.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Security Settings ---
# SECRET_KEY and DEBUG loaded from environment variables
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'unsafe-default-key')
DEBUG = os.getenv('DJANGO_DEBUG', 'True') == 'True'
ALLOWED_HOSTS = os.getenv('DJANGO_ALLOWED_HOSTS', '127.0.0.1,www.wheatleycensus.org,wheatleycensus.org').split(',')

# --- Installed Apps ---
# List of Django and third-party apps enabled for this project.
# Add or remove apps here to enable/disable features.
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'import_export',
    'wheatleycensus',
]

# --- Middleware ---
# Middleware is a stack of components that process requests/responses.
# Add, remove, or reorder middleware to change request/response handling.
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# --- URL Configuration ---
# ROOT_URLCONF points to the main URL routing file for the project.
ROOT_URLCONF = 'wheatleycensus.urls'

# --- Templates ---
# TEMPLATES configures the Django template engine.
# You can add template directories or context processors here.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# --- WSGI Application ---
# WSGI_APPLICATION points to the WSGI entry point for deployment.
WSGI_APPLICATION = 'wheatleycensus.wsgi.application'

# --- Database Configuration ---
# All credentials loaded from environment variables for security
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', ''),
        'USER': os.getenv('DB_USER', ''),
        'PASSWORD': os.getenv('DB_PASSWORD', ''),
        'HOST': os.getenv('DB_HOST', ''),
        'PORT': os.getenv('DB_PORT', ''),
    }
}

# --- Auto Field ---
# DEFAULT_AUTO_FIELD sets the default type for primary keys.
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Password Validation ---
# AUTH_PASSWORD_VALIDATORS enforces password strength and security.
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# --- Internationalization ---
# LANGUAGE_CODE, TIME_ZONE, USE_I18N, USE_TZ control language and time settings.
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# --- Static & Media Files ---
# STATIC_URL, STATICFILES_DIRS, STATIC_ROOT configure static file handling.
# MEDIA_URL, MEDIA_ROOT configure user-uploaded media files.
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

# --- Admin URL ---
# ADMIN_URL sets the path for the Django admin site.
ADMIN_URL = 'admin/'

# --- Notifications ---
# NOTIFICATIONS is a custom setting for admin notifications.
NOTIFICATIONS = [('Akshith', 'amothkuri@wisc.edu')]

# --- Miscellaneous ---
# APPEND_SLASH controls whether Django appends a slash to URLs.
APPEND_SLASH = True
